esphome:
  includes:
    - src/callback_handler.h
    - src/communication.h
    - src/mapper.h
    - src/mapper.cpp
    - src/property.h
    - src/property.cpp
    - src/simple_variant.h
    - src/type.h
    - src/type.cpp
  platformio_options:
    build_flags:
      - "-DESPCLIENT_ID=$espclient_can_id"
      - "-DMANAGER_ID=$manager_can_id"
      - "-DKESSEL_ID=$kessel_can_id"
      - "-DHK1_ID=$hk1_can_id"
      - "-DHK2_ID=$hk2_can_id"

substitutions:
  kessel_can_id: "0x180"
  hk1_can_id: "0x301"
  hk2_can_id: "0x302"
  manager_can_id: "0x6a1"
  espclient_can_id: "0x6a2"

#########################################
#                                       #
#   Global variables                    #
#                                       #
#########################################
globals:
  - id: gRAUMISTTEMP
    type: float
    initial_value: "0.0"
  - id: gRAUMFEUCHTE
    type: float
    initial_value: "0.0"

#########################################
#                                       #
#   Time Synchronization                #
#                                       #
#########################################
time:
  - platform: sntp
    id: sntp_time
    on_time:
      - seconds: 0
        minutes: 0
        hours: 3 # sync at 3 am
        then:
          - lambda: |-
              syncTime();

#########################################
#                                       #
#   Buttons                             #
#                                       #
#########################################
button:
  - platform: template
    name: Synchronize Time
    on_press:
      then:
        - lambda: |-
            syncTime();

#########################################
#                                       #
#   Intervals                           #
#                                       #
#########################################
interval:
  - interval: 250ms
    then:
      - lambda: |-
          // Request sensor value one after another.
          if(!conditionalRequests.empty()) {
            // find the next request of which the condition evaluates to true
            auto it = std::find_if(conditionalRequests.begin(),conditionalRequests.end(),[](const auto& element){
              return element._condition();
            });
            if(it != conditionalRequests.end()) {
                requestData(it->_request.first, it->_request.second);
                conditionalRequests.erase(it);
            }
          }
  - interval: $interval_medium
    then:
      - lambda: |-
          // Send current RAUMISTTEMP
          const auto room_temp = id(gRAUMISTTEMP);
          if(room_temp > 0.0f) {
            ESP_LOGI("SET", "Sending cached room temperature %f to heatpump", room_temp);
            sendData(HK1, Property::kRAUMISTTEMP, static_cast<std::uint16_t>(room_temp * 10.0f));
          }
          // Send current RAUMFEUCHTE
          const auto humidity = id(gRAUMFEUCHTE);
          if(humidity > 0.0) {
            ESP_LOGI("SET", "Sending cached humidity %f to heatpump", humidity);
            sendData(HK1, Property::kRAUMFEUCHTE, static_cast<std::uint16_t>(humidity * 10.0f));
          }

#########################################
#                                       #
#   Home Assistant Sensors              #
#                                       #
#########################################
sensor:
  - platform: homeassistant
    name: "Temperature Sensor From Home Assistant"
    entity_id: $entity_room_temperature
    on_value:
      then:
        - lambda: |-
            ESP_LOGI("SET", "Updating room temperature to %f", x);
            id(gRAUMISTTEMP) = x;

  - platform: homeassistant
    name: "Humidity Sensor From Home Assistant"
    entity_id: $entity_humidity
    on_value:
      then:
        - lambda: |-
            ESP_LOGI("SET", "Updating humidity to %f", x);
            id(gRAUMFEUCHTE) = x;

#########################################
#                                       #
#   CANbus configuration                #
#                                       #
#########################################
canbus:
  - id: wp_can
    can_id: $espclient_can_id
    use_extended_id: false
    bit_rate: 20kbps
    on_frame:
    - can_id: 0
      can_id_mask: 0
      then:
        - lambda: |-
            ESP_LOGD("CAN", "Can message received with CANId 0x%04lx", can_id);
            const auto [property, value] = processCanMessage(x);
            const auto canMember = getCanMemberByCanId(can_id);
            if(canMember) {
              auto callback = CallbackHandler::instance().getCallback(std::make_pair(canMember->get(),property));
              callback(value);
            } else {
              ESP_LOGD("CAN", "No CANMember with CANId 0x%04lx available.", can_id);
            }